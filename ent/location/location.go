// Code generated by ent, DO NOT EDIT.

package location

import (
	"fmt"
	"time"
)

const (
	// Label holds the string label denoting the location type in the database.
	Label = "location"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldType holds the string denoting the type field in the database.
	FieldType = "type"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldNameJa holds the string denoting the name_ja field in the database.
	FieldNameJa = "name_ja"
	// FieldAddress holds the string denoting the address field in the database.
	FieldAddress = "address"
	// FieldAddressJa holds the string denoting the address_ja field in the database.
	FieldAddressJa = "address_ja"
	// FieldCreated holds the string denoting the created field in the database.
	FieldCreated = "created"
	// FieldModified holds the string denoting the modified field in the database.
	FieldModified = "modified"
	// Table holds the table name of the location in the database.
	Table = "locations"
)

// Columns holds all SQL columns for location fields.
var Columns = []string{
	FieldID,
	FieldType,
	FieldName,
	FieldNameJa,
	FieldAddress,
	FieldAddressJa,
	FieldCreated,
	FieldModified,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreated holds the default value on creation for the "created" field.
	DefaultCreated func() time.Time
	// DefaultModified holds the default value on creation for the "modified" field.
	DefaultModified func() time.Time
	// UpdateDefaultModified holds the default value on update for the "modified" field.
	UpdateDefaultModified func() time.Time
)

// Type defines the type for the "type" enum field.
type Type string

// Type values.
const (
	TypeUniv Type = "univ"
	TypeCorp Type = "corp"
)

func (_type Type) String() string {
	return string(_type)
}

// TypeValidator is a validator for the "type" field enum values. It is called by the builders before save.
func TypeValidator(_type Type) error {
	switch _type {
	case TypeUniv, TypeCorp:
		return nil
	default:
		return fmt.Errorf("location: invalid enum value for type field: %q", _type)
	}
}
